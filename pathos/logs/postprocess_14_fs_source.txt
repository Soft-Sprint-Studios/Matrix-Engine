#version 460
#extension GL_ARB_texture_rectangle : enable

uniform sampler2DRect texture0;
uniform vec4 color;
uniform float screenwidth;
uniform float screenheight;

in vec2 ps_texcoord;
out vec4 oColor;

uniform float SSAORadius;
uniform float SSAOStrength;
void main()
{
	vec2 texelSizeSSAO = 1.0 / vec2(screenwidth, screenheight);
    vec3 rgbM_SSAO = texture(texture0, ps_texcoord).rgb;
    vec3 rgbNW_SSAO = texture(texture0, ps_texcoord + vec2(-1, -1) * texelSizeSSAO).rgb;
    vec3 rgbNE_SSAO = texture(texture0, ps_texcoord + vec2(1, -1) * texelSizeSSAO).rgb;
    vec3 rgbSW_SSAO = texture(texture0, ps_texcoord + vec2(-1, 1) * texelSizeSSAO).rgb;
    vec3 rgbSE_SSAO = texture(texture0, ps_texcoord + vec2(1, 1) * texelSizeSSAO).rgb;

    vec3 luma_SSAO = vec3(0.299, 0.587, 0.114);
    float lumaNW_SSAO = dot(rgbNW_SSAO, luma_SSAO);
    float lumaNE_SSAO = dot(rgbNE_SSAO, luma_SSAO);
    float lumaSW_SSAO = dot(rgbSW_SSAO, luma_SSAO);
    float lumaSE_SSAO = dot(rgbSE_SSAO, luma_SSAO);
    float lumaM_SSAO = dot(rgbM_SSAO, luma_SSAO);

    float lumaMin_SSAO = min(lumaM_SSAO, min(min(lumaNW_SSAO, lumaNE_SSAO), min(lumaSW_SSAO, lumaSE_SSAO)));
    float lumaMax_SSAO = max(lumaM_SSAO, max(max(lumaNW_SSAO, lumaNE_SSAO), max(lumaSW_SSAO, lumaSE_SSAO)));

    float edgeFactor = step(lumaM_SSAO, mix(lumaMin_SSAO, lumaMax_SSAO, 0.5));

    oColor = vec4(mix(rgbB_SSAO, rgbA_SSAO, edgeFactor), 1.0);
}
