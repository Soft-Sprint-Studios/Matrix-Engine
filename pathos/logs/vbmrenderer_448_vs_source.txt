#version 460

uniform mat4 projection;
uniform mat4 modelview;

uniform mat4 normalmatrix;
uniform mat4 dlight_0_matrix;
uniform mat4 dlight_1_matrix;
uniform mat4 dlight_2_matrix;
uniform mat4 dlight_3_matrix;

uniform vec4 bones[96];

uniform vec3 v_origin;
uniform vec3 v_right;

uniform vec4 causticsm1;
uniform vec4 causticsm2;

uniform vec2 scroll;

uniform float treesway_strength;
uniform vec3 treesway_direction;
in vec3 in_position;
in vec3 in_tangent;
in vec3 in_normal;
in vec2 in_texcoord1;
in vec2 in_texcoord2;
in vec4 in_boneindexes;
in vec4 in_boneweights;
in vec2 in_flexcoord;

out vec3 ps_vertexpos;
out vec3 ps_tangent;
out vec3 ps_binormal;
out vec3 ps_normal;
out vec2 ps_texcoord1;
out vec2 ps_texcoord2;
out vec4 ps_dlight_0_vertexcoord;
out vec4 ps_dlight_1_vertexcoord;
out vec4 ps_dlight_2_vertexcoord;
out vec4 ps_dlight_3_vertexcoord;

vec3 TransformVectorByBone( vec3 vin, int boneindex, float weight )
{
	vec3 tmp;
	tmp[0] = dot(vin, bones[boneindex].xyz)+bones[boneindex].w;
	tmp[1] = dot(vin, bones[boneindex+1].xyz)+bones[boneindex+1].w;
	tmp[2] = dot(vin, bones[boneindex+2].xyz)+bones[boneindex+2].w;
	
	return tmp*weight;
}

vec3 RotateVectorByBone( vec3 vin, int boneindex, float weight )
{
	vec3 tmp;
	tmp[0] = dot(vin, bones[boneindex].xyz);
	tmp[1] = dot(vin, bones[boneindex+1].xyz);
	tmp[2] = dot(vin, bones[boneindex+2].xyz);
	
	return tmp*weight;
}

void main()
{
	int boneindex1 = int(in_boneindexes.x);
	int boneindex2 = int(in_boneindexes.y);
	int boneindex3 = int(in_boneindexes.z);
	int boneindex4 = int(in_boneindexes.w);
	
	vec3 vert_origin = in_position;
	vec3 vert_normal = in_normal;
	
	vert_origin += 10 * sin(dot(vert_origin, vec3(10,50,0)) * vec3(10,50,0);
    vec3 trans_origin;
	trans_origin = TransformVectorByBone( vert_origin, boneindex1, in_boneweights.x );
	trans_origin += TransformVectorByBone( vert_origin, boneindex2, in_boneweights.y );
	trans_origin += TransformVectorByBone( vert_origin, boneindex3, in_boneweights.z );
	trans_origin += TransformVectorByBone( vert_origin, boneindex4, in_boneweights.w );
	
	vec3 trans_normal;
	trans_normal = RotateVectorByBone( vert_normal, boneindex1, in_boneweights.x );
	trans_normal += RotateVectorByBone( vert_normal, boneindex2, in_boneweights.y );
	trans_normal += RotateVectorByBone( vert_normal, boneindex3, in_boneweights.z );
	trans_normal += RotateVectorByBone( vert_normal, boneindex4, in_boneweights.w );		
	
	vec3 trans_tangent;
	vec3 trans_binormal;
	vec4 position = vec4(trans_origin, 1.0)*modelview;

	ps_vertexpos = position.xyz;
	ps_normal = (normalmatrix*vec4(trans_normal, 0.0)).xyz;
	
	ps_texcoord1 = in_texcoord1 + scroll;
	gl_Position = position*projection;
}
